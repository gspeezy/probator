// ----------------------------------------------------------------------
// return the checked element in an input group
// ----------------------------------------------------------------------
function getCheckedInput(container)
{
	var childNodes = container.childNodes;
	
	for (var i = 0; i < childNodes.length; i++)
	{
		if (childNodes[i].tagName && childNodes[i].tagName.toLowerCase() === 'input')
		{
			if (childNodes[i].checked)
				return childNodes[i];
		}
	}
	return null;
}

// ----------------------------------------------------------------------
// return the checked value in an input group
// ----------------------------------------------------------------------
function getCheckedInputValue(container)
{
	var element = getCheckedInput(container);
	return element ? element.value : null;
}

// ----------------------------------------------------------------------
// return an element by value in an input group
// ----------------------------------------------------------------------
function getInputByValue(container, value)
{
	var childNodes = container.childNodes;
	
	for (var i = 0; i < childNodes.length; i++)
	{
		if (childNodes[i].tagName && childNodes[i].tagName.toLowerCase() === 'input')
		{
			if (childNodes[i].value === value)
				return childNodes[i];
		}
	}
	return null;
}

// ----------------------------------------------------------------------
// check element by value in an input group
// ----------------------------------------------------------------------
function checkInputByValue(container, value)
{
	var input = getInputByValue(container, value);
	if (input != null) input.checked = true;
}

// ----------------------------------------------------------------------
// click element by value in an input group
// ----------------------------------------------------------------------
function clickInputByValue(container, value)
{
	var input = getInputByValue(container, value);
	if (input != null) input.click();
}

// ----------------------------------------------------------------------
// return the selected option in a select element
// ----------------------------------------------------------------------
function getSelectedOption(container)
{
	return container.selectedIndex > -1 ?
		container.options[container.selectedIndex] : null;
}

// ----------------------------------------------------------------------
// return the selected option's value in a select element
// ----------------------------------------------------------------------
function getSelectedOptionValue(container)
{
	var option = getSelectedOption(container);
	return option != null ? option.value : null;
}

// ----------------------------------------------------------------------
// select option by index in a select element
// ----------------------------------------------------------------------
function selectOptionByIndex(container, index)
{
	if (container.selectedIndex != index)
	{
		container.selectedIndex = index;
		
		if (container.ClientBehavior && container.ClientBehavior.get_clientEvent() === 'change')
		{
			container.ClientBehavior.call_eventHandler();
		}
	}
}

// ----------------------------------------------------------------------
// select option by value in a select element
// ----------------------------------------------------------------------
function selectOptionByValue(container, value)
{
	for (var i = 0; i < container.length; i++)
	{
		var option = container.options[i];
		
		if (option.value === value)
		{
			selectOptionByIndex(container, option.index);
			break;
		}
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function isExactDateBehavior(id1, id2, id3)
{
	var isExactDate = $get(id1);
	var dateDeathTo = $get(id2);
	var dateDeathToPanel = $get(id3);
	
	if (getCheckedInputValue(isExactDate) === 'yes')
	{
		dateDeathTo.value = '';
		dateDeathToPanel.style.display = 'none';
	}
	else
	{
		dateDeathToPanel.style.display = '';
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function knowledgeOfApplicationsBehavior(id1, id2)
{
	var knowledgeOfApplications = $get(id1);
	var applicationsPanel = $get(id2);
	
	applicationsPanel.style.display =
		getCheckedInputValue(knowledgeOfApplications) === 'no' ? 'none' : '';
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function addressSameBehavior(id1, id2, id3)
{
	var addressSame = $get(id1);
	var addressPanel = $get(id3);
	var address = $get(id2);

	if(addressSame.checked)
		address.control.reset();

	address.control.hide(addressSame.checked);
	addressPanel.style.display = addressSame.checked ? 'none' : '';
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function ownershipBehavior(id1, id2, id3)
{
	var ownership = $get(id1);
	var percentageSharePanel = $get(id3);

	switch (getCheckedInputValue(ownership))
	{
		case 'sole':
		case 'joint':
			var percentageShare = $get(id2);
			percentageShare.value = '';
			percentageSharePanel.style.display ='none';
			break;
		case 'shared':
			percentageSharePanel.style.display = '';
			break;
	}
}
// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
var inWitnessBehavior = false;

function witnessBehavior(id1, id2, id3, id4, id5, id6, id7, id8, id9)
{
	if (inWitnessBehavior) return;
	inWitnessBehavior = true;
	
	try
	{
		var witnessDeceased = $get(id1);
		var witnessDeceasedPanel = $get(id2);
		var witnessAddress = $get(id3);
		var witnessAddressPanel = $get(id4);
		var addressSameAsWill = $get(id5);
		var addressSameAsWillPanel = $get(id6);
		var witnessedWill = $get(id7);
		var effortFindAddress = $get(id8);
		var effortFindAddressPanel = $get(id9);
		
		if (getCheckedInputValue(witnessedWill) === 'yes')	
		{
			if (getCheckedInputValue(witnessDeceased) === 'yes')
				checkInputByValue(witnessDeceased, 'no');
			
			witnessDeceasedPanel.style.display = 'none';
			addressSameAsWillPanel.style.display = '';
			
			effortFindAddress.value = '';
			effortFindAddress.readOnly = false;
			effortFindAddressPanel.style.display = 'none';

			if (addressSameAsWill.checked)
			{
				witnessAddress.control.reset();
				witnessAddress.control.disable(false);
				witnessAddress.control.hide(true);
				
				witnessAddress.style.display = 'none';
				witnessAddressPanel.style.display = 'none';
			}
			else
			{
				witnessAddress.control.hide(false);
				
				witnessAddress.style.display = '';
				witnessAddressPanel.style.display = '';
			}
		}
		else
		{
			if (addressSameAsWill.checked)
				addressSameAsWill.checked = false;
				
			if (getCheckedInputValue(witnessDeceased) === 'yes')
			{
				witnessAddress.control.reset();
				witnessAddress.control.disable(false);
				witnessAddress.control.hide(true);
				effortFindAddress.value = '';
				effortFindAddress.readOnly = false;
				
				witnessAddress.style.display = 'none';
				witnessAddressPanel.style.display = 'none';
				effortFindAddressPanel.style.display = 'none';
			}
			else
			{
				witnessAddress.control.hide(false);
				
				witnessAddress.style.display = '';
				witnessAddressPanel.style.display = '';
				effortFindAddressPanel.style.display = '';
			}
			witnessDeceasedPanel.style.display = '';
			addressSameAsWillPanel.style.display = 'none';
		}
	}
	finally
	{
		inWitnessBehavior = false;
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function appointmentTypeBehavior(id1, id2, id3, id4, id5)
{
	var appointmentType = $get(id1);
	var instituteStatus = $get(id2);
	var institutePanel = $get(id3);
	var executorApplying = $get(id4);
	var executorApplyingPanel = $get(id5);
	
	switch (getSelectedOptionValue(appointmentType))
	{
		case 'none':
		case 'sole':
		case 'institute':
			selectOptionByValue(instituteStatus, 'none');
			clickInputByValue(executorApplying, 'yes');
			
			institutePanel.style.display = 'none';
			executorApplyingPanel.style.display = 'none';
			break;
		case 'substitute':
			clickInputByValue(executorApplying, 'yes');
			
			institutePanel.style.display = '';
			executorApplyingPanel.style.display = 'none';
			break;
		case 'executor':
			selectOptionByValue(instituteStatus, 'none');
			
			institutePanel.style.display = 'none';
			executorApplyingPanel.style.display = '';
			break;
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function executorApplyingBehavior(id1, id2, id3)
{
	var executorApplying = $get(id1);
	var executorStatus = $get(id2);
	var executorStatusPanel = $get(id3);

	if (getCheckedInputValue(executorApplying) === 'yes')
	{
		selectOptionByValue(executorStatus, 'applying');
		executorStatusPanel.style.display = 'none';
	}
	else
	{
		executorStatusPanel.style.display = '';
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function executorStatusBehavior(id1, id2, id3, id4, id5, id6, id7, id8, id9, id10, id11, id12, id13, id14, id15)
{
	var executorStatus = $get(id1);
	var executorType = $get(id2);
	var executorEntityTypePanel = $get(id3);
	var executorPredeceased = $get(id4);
	var executorPredeceasedPanel = $get(id5);
	var executorBirthDate = $get(id6);
	var executorBirthDatePanel = $get(id7);
	var executorOccupation = $get(id12);
	var executorOccupationPanel = $get(id13);
	var noRelationship = $get(id14);
	var executorRelationshipPanel = $get(id15);
	
	var executorTypeValue = getCheckedInputValue(executorType);
	
	if (getSelectedOptionValue(executorStatus) === 'deceased')
	{
		if (executorTypeValue !== 'individual')
		{
			clickInputByValue(executorType, 'individual');
		}
		executorBirthDate.value = '';
		executorOccupation.value = '';
		
//		if (!noRelationship.checked)
		{
			noRelationship.click();
		}
		
		executorPredeceasedPanel.style.display = '';
		executorEntityTypePanel.style.display = 'none';
		executorBirthDatePanel.style.display = 'none';
		executorOccupationPanel.style.display = 'none';
		executorRelationshipPanel.style.display = 'none';
	}
	else
	{
		checkInputByValue(executorPredeceased, 'yes');
		
//		if (executorTypeValue === 'individual')
		{
			executorRelationshipPanel.style.display = '';
		}
		executorPredeceasedPanel.style.display = 'none';
		executorEntityTypePanel.style.display = '';
		executorBirthDatePanel.style.display = '';
		executorOccupationPanel.style.display = '';
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function entityTypeBehavior(id1, id2, id3)
{
	var entityType = $get(id1);
	var organisationPanel = $get(id3);
	
	if (getCheckedInputValue(entityType) === 'individual')
	{
		var organisation = $get(id2);
		
		organisation.value = '';
		organisationPanel.style.display = 'none';
	}
	else
	{
		organisationPanel.style.display = '';
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function serviceTypeBehavior(id1, id2, id3, id4, id5) {
    var entityType = $get(id1);
    var organisationPanel = $get(id3);
    var attentionPanel = $get(id5);

    if (getCheckedInputValue(entityType) === 'individual') {
        var organisation = $get(id2);
        var attention = $get(id4);

        organisation.value = '';
        organisationPanel.style.display = 'none';

        attention.value = '';
        attentionPanel.style.display = 'none';
    }
    else {
        organisationPanel.style.display = '';
        attentionPanel.style.display = '';
    }
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function instituteStatusBehavior(id1, id2, id3, id4, id5, id6, id7, id8, id9)
{
	var instituteStatus = $get(id1);
	var institutePredeceased = $get(id2);
	var institutePredeceasedPanel = $get(id3);
	var instituteType = $get(id4);
	var instituteTypePanel = $get(id5);
	var instituteAddress = $get(id6);
	var instituteAddressPanel = $get(id7);
	var instituteReason = $get(id8);
	var instituteReasonPanel = $get(id9);
	
	var instituteStatusValue = getSelectedOptionValue(instituteStatus);
	
	switch (instituteStatusValue)
	{
		case 'none':
		case 'deceased':
			instituteReason.value = '';
			clickInputByValue(instituteType, 'individual');

			instituteAddress.control.reset();
			instituteAddress.control.hide(true);

			if (instituteStatusValue !== 'none')
				institutePredeceasedPanel.style.display = '';
				
			instituteTypePanel.style.display = 'none';
			instituteAddressPanel.style.display = 'none';
			instituteReasonPanel.style.display = 'none';
			break;
		case 'renounced':
			instituteReason.value = '';
			instituteAddress.control.hide(false);
			checkInputByValue(institutePredeceased, 'yes');

			institutePredeceasedPanel.style.display = 'none';
			instituteTypePanel.style.display = '';
			instituteReasonPanel.style.display = 'none';
			instituteAddressPanel.style.display = '';
			break;
		case 'unwilling':
			instituteAddress.control.hide(false);
			checkInputByValue(institutePredeceased, 'yes');

			institutePredeceasedPanel.style.display = 'none';
			instituteTypePanel.style.display = '';
			instituteAddressPanel.style.display = '';
			instituteReasonPanel.style.display = '';
			break;
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function executorTypeBehavior(id1, id2, id3, id4, id5, id6, id7)
{
	var executorType = $get(id1);
	var executorOrganisationPanel = $get(id3);
	var executorRelationshipPanel = $get(id4);
	var executorBirthDatePanel = $get(id7);
	
	if (getCheckedInputValue(executorType) === 'individual')
	{
		var executorOrganisation = $get(id2);
		var executorStatus = $get(id6);
		
		executorOrganisation.value = '';
		executorOrganisationPanel.style.display = 'none';
		//Defect 24291. Display BirthDatePanel as required
		executorBirthDatePanel.style.display = '';
		
		if (getSelectedOptionValue(executorStatus) !== 'deceased')
		{
			executorRelationshipPanel.style.display = '';
		}
	}
	else
	{
		var noRelationship = $get(id5);
		
		if (!noRelationship.checked)
		{
			noRelationship.click();
		}
		executorOrganisationPanel.style.display = '';
		executorRelationshipPanel.style.display = 'none';
		executorBirthDatePanel.style.display = 'none';
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function noRelationshipBehavior(id1, id2)
{
	var noRelationship = $get(id1);
	var executorRelationship = $get(id2);
	
	if (!noRelationship.checked)
	{
		if (executorRelationship.value === 'none')
			executorRelationship.value = '';
	}
	else
		executorRelationship.value = 'none';
		
	executorRelationship.readOnly = noRelationship.checked;
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function maritalChangesBehavior(id1, id2, id3)
{
	var maritalChanges = $get(id1);
	var dependantPanel = $get(id3);

	if (getCheckedInputValue(maritalChanges) === 'no')
	{
		var dependantElement = $get(id2);
		
		if (getCheckedInputValue(dependantElement) === 'yes')
			clickInputByValue(dependantElement, 'no');

		dependantPanel.style.display = 'none';
	}
	else
	{
		dependantPanel.style.display = '';
	}
}

// ----------------------------------------------------------------------
// defect 35582 - new function
// ----------------------------------------------------------------------
function marriageChangesBehavior(id1, id2, id3, id4, id5, id6, id7) {
    var mdAtWillExecution = $get(id1);
    var mgEndedAfterWillExecution = $get(id2);
    var mgEndedAfterWillExecutionPanel = $get(id3);
    var mgEndedOn = $get(id4);
    var mgEndedOnPanel = $get(id5);
    var mdSinceWillExecution = $get(id6);
    var mdSinceWillExecutionPanel = $get(id7);

    if (getCheckedInputValue(mdAtWillExecution) === 'yes') {
        if (getCheckedInputValue(mdSinceWillExecution) === 'yes')
            clickInputByValue(mdSinceWillExecution, 'no');
        if (mdSinceWillExecutionPanel.style.display != 'none')
            mdSinceWillExecutionPanel.style.display = 'none';
        if (mgEndedAfterWillExecutionPanel.style.display === 'none')
            mgEndedAfterWillExecutionPanel.style.display = '';
        if (getCheckedInputValue(mgEndedAfterWillExecution) === 'yes') {
            if (mgEndedOnPanel.style.display === 'none')
                mgEndedOnPanel.style.display = '';
        }
        else {
            if (mgEndedOn.value != '')
                mgEndedOn.value = '';
            if (mgEndedOnPanel.style.display != 'none')
                mgEndedOnPanel.style.display = 'none';                         
        }         
    }
    else {
        if (mdSinceWillExecutionPanel.style.display != '')
            mdSinceWillExecutionPanel.style.display = '';
        if (mgEndedOn.value != '')
            mgEndedOn.value = '';
        if (mgEndedOnPanel.style.display != 'none')
            mgEndedOnPanel.style.display = 'none';             
        if (getCheckedInputValue(mgEndedAfterWillExecution) === 'yes')
            clickInputByValue(mgEndedAfterWillExecution, 'no');
        if (mgEndedAfterWillExecutionPanel.style.display != 'none')
            mgEndedAfterWillExecutionPanel.style.display = 'none';
    }
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function valueBehavior(id1, id2)
{
	var valueWa = $get(id1);
	var valueOutsideWa = $get(id2);

	if (valueWa.value == '')
	{
		if (valueOutsideWa.value == 'nil')
		{
			valueOutsideWa.value = '';
			valueOutsideWa.readOnly = false;
		}
	}
	else if(valueWa.value != 'nil')
	{
		valueOutsideWa.value = 'nil';
		valueOutsideWa.readOnly = true;
	}
	if (valueOutsideWa.value == '')
	{
		if (valueWa.value == 'nil')
		{
			valueWa.value = '';
			valueWa.readOnly = false;
		}
	}
	else if(valueOutsideWa.value != 'nil')
	{
		valueWa.value = 'nil';
		valueWa.readOnly = true;
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function valueHeader(header, elementId, clientIds)
{
	var innerHTML = header;
	var fullDescription = $get(clientIds[0]);

	if (fullDescription.value != '')
	{
		var valueWa = $get(clientIds[1]);
		innerHTML += ' ' + fullDescription.value;
		
		if (valueWa.value == '' || valueWa.value == 'nil')
		{
			if (clientIds.length > 2)
			{
				var valueOutsideWa = $get(clientIds[2]);
				innerHTML += ' - ' + valueOutsideWa.value + ' (outside W.A.)';
			}
		}
		else
		{
			innerHTML += ' - ' + valueWa.value + ' (in W.A.)';
		}
	}
	$get(elementId).innerHTML = innerHTML;
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function witnessDeceasedBehavior(id1, id2, id3, id4, id5)
{
	var witnessDeceased = $get(id1);
	var witnessAddress = $get(id2);
	var witnessAddressPanel = $get(id3);

	var effortFindAddress = $get(id4);
	var effortFindAddressPanel = $get(id5);

	if (getCheckedInputValue(witnessDeceased) === 'yes')
	{
		witnessAddress.control.reset();
		witnessAddress.control.hide(true);
		effortFindAddress.value = '';
		
		witnessAddressPanel.style.display = 'none'
		effortFindAddressPanel.style.display = 'none';
	}
	else
	{
		witnessAddress.control.hide(false);
		witnessAddress.readOnly = false;
		effortFindAddress.readOnly = false;
		
		witnessAddressPanel.style.display = ''
		effortFindAddressPanel.style.display = '';
	}
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function witnessAddressBehavior(id1, id2)
{
	var witnessAddress = $get(id1);
	var effortFindAddress = $get(id2);
	
	effortFindAddress.readOnly = witnessAddress.control.get_street() != '' ||
		witnessAddress.control.get_suburb() != '' || witnessAddress.control.get_postCode() != '';
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function effortFindAddressBehavior(id1, id2)
{
	var effortFindAddress = $get(id1);
	var witnessAddress = $get(id2);
	
	witnessAddress.control.disable(effortFindAddress.value != '');
}

// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function clausesBehavior(id1, id2) 
{
    var addAdditionalClausesRd = $get(id1);
    var clausesPanel = $get(id2);

    if (getCheckedInputValue(addAdditionalClausesRd) == 'yes') 
    {
        clausesPanel.style.display = '';
    }
    else 
    {
        clausesPanel.style.display = 'none';
    }
}
// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function addDebtsBehavior(id1, id2) {
    var haveAnyDebtRd = $get(id1);
    var debtsPanel = $get(id2);

    if (getCheckedInputValue(haveAnyDebtRd) == 'yes') {
        debtsPanel.style.display = '';
    }
    else {
        debtsPanel.style.display = 'none';
    }
}
// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
function downloadDocument(caller)
{
	$get('ctl00_rightPlaceHolder_download').click();
}
