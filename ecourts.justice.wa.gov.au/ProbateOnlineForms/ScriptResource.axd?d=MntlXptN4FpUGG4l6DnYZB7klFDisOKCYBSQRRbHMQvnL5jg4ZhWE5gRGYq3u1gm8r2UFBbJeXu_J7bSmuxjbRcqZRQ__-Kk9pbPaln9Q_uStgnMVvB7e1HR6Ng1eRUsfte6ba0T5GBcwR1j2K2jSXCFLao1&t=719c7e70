Type.registerNamespace("Justice.EForms.Core.Interface");

Justice.EForms.Core.Interface.ImageButton = function(element)
{
	Justice.EForms.Core.Interface.ImageButton.initializeBase(this, [element]);
	
	this._id = null;
	this._left = null;
	this._right = null;
	this._middle = null;
	this._image = null;
	this._status = null;
	this._timer = null;
	this._timeout = 0;
	this._alert = null;
	this._confirm = null;
	this._uniqueId = null;
	this._basePath = null;
	this._baseImage = null;
	this._hoverImage = null;
	this._selectImage = null;
	this._postScript = null;
	this._commandScript = null;
	this._postBackCalled = false;
	this._disableActive = false;
	this._disablePostBack = false;
	this._postBackDelegate = null;
	this._mouseoutDelegate = null;
	this._mouseoverDelegate = null;
	this._mouseupDelegate = null;
	this._mousedownDelegate = null;
	this._endRequestDelegate = null;
}

Justice.EForms.Core.Interface.ImageButton.prototype =
{
	initialize : function()
	{
		Justice.EForms.Core.Interface.ImageButton.callBaseMethod(this, 'initialize');
		
		this._image = $get(this._id + '_status');
		this.setStatusImage(this._status);
		
		if (this._status == null || this._status !== '' && this._status.substr(0, 8) !== 'disabled')
		{
			this._left = $get(this._id + '_left');
			this._right = $get(this._id + '_right');
			this._middle = $get(this._id + '_middle');
		
			this._endRequestDelegate = Function.createDelegate(this, this.endRequestHandler);
			Sys.WebForms.PageRequestManager.getInstance().add_endRequest(this._endRequestDelegate);
		
			var element = this.get_element();
			this._postBackDelegate = Function.createDelegate(this, this.postBackHandler);
			$addHandler(element, 'click', this._postBackDelegate);

			this._mouseoutDelegate = Function.createDelegate(this, this.mouseoutHandler);
			$addHandler(element, 'mouseout', this._mouseoutDelegate);
		
			this._mouseoverDelegate = Function.createDelegate(this, this.mouseoverHandler);
			$addHandler(element, 'mouseover', this._mouseoverDelegate);

			this._mouseupDelegate = Function.createDelegate(this, this.mouseupHandler);
			$addHandler(element, 'mouseup', this._mouseupDelegate);

			this._mousedownDelegate = Function.createDelegate(this, this.mousedownHandler);
			$addHandler(element, 'mousedown', this._mousedownDelegate);
		}
		else
		{
			$get(this._id + '_text').style.color = '#999999';
		}
	},

	dispose : function()
	{
		if (this._status == null || this._status !== '' && this._status.substr(0, 8) !== 'disabled')
		{
			this.endRequest();
		
			var element = this.get_element();
			$removeHandler(element, 'click', this._postBackDelegate);
			
			$removeHandler(element, 'mousedown', this._mousedownDelegate);
			$removeHandler(element, 'mouseup', this._mouseupDelegate);
			$removeHandler(element, 'mouseover', this._mouseoverDelegate);
			$removeHandler(element, 'mouseout', this._mouseoutDelegate);
			
			Sys.WebForms.PageRequestManager.getInstance().remove_endRequest(this._endRequestDelegate);
		}		
		Justice.EForms.Core.Interface.ImageButton.callBaseMethod(this, 'dispose');
	},
	
	get_id : function()
	{
		return this._id;
	},

	set_id : function(value)
	{
	    if (this._id !== value)
	    {
			this._id = value;
			this.raisePropertyChanged('id');
		}
	},
	
	get_status : function()
	{
		return this._status;
	},

	set_status : function(value)
	{
	    if (this._status !== value)
	    {
			this._status = value != null ? value.toLowerCase() : null;
			this.raisePropertyChanged('status');
		}
	},
	
	get_alert : function()
	{
		return this._alert;
	},

	set_alert : function(value)
	{
	    if (this._alert !== value)
	    {
			this._alert = value;
			this.raisePropertyChanged('alert');
		}
	},
	
	get_confirm : function()
	{
		return this._confirm;
	},

	set_confirm : function(value)
	{
	    if (this._confirm !== value)
	    {
			this._confirm = value;
			this.raisePropertyChanged('confirm');
		}
	},
	
	get_timeout : function()
	{
		return this._timeout;
	},

	set_timeout : function(value)
	{
	    if (this._timeout !== value)
	    {
			this._timeout = value;
			this.raisePropertyChanged('timeout');
		}
	},
	
	get_uniqueId : function()
	{
		return this._uniqueId;
	},

	set_uniqueId : function(value)
	{
	    if (this._uniqueId !== value)
	    {
			this._uniqueId = value;
			this.raisePropertyChanged('uniqueId');
		}
	},
	
	get_basePath : function()
	{
		return this._basePath;
	},

	set_basePath : function(value)
	{
	    if (this._basePath !== value)
	    {
			this._basePath = value;
			this.raisePropertyChanged('basePath');
		}
	},
	
	get_baseImage : function()
	{
		return this._baseImage;
	},

	set_baseImage : function(value)
	{
	    if (this._baseImage !== value)
	    {
			this._baseImage = value;
			this.raisePropertyChanged('baseImage');
		}
	},
	
	get_hoverImage : function()
	{
		return this._hoverImage;
	},

	set_hoverImage : function(value)
	{
	    if (this._hoverImage !== value)
	    {
			this._hoverImage = value;
			this.raisePropertyChanged('hoverImage');
		}
	},
	
	get_selectImage : function()
	{
		return this._selectImage;
	},

	set_selectImage : function(value)
	{
	    if (this._selectImage !== value)
	    {
			this._selectImage = value;
			this.raisePropertyChanged('selectImage');
		}
	},
	
	get_postScript : function()
	{
		return this._postScript;
	},

	set_postScript : function(value)
	{
	    if (this._postScript !== value)
	    {
			this._postScript = value;
			this.raisePropertyChanged('postScript');
		}
	},
	
	get_commandScript : function()
	{
		return this._commandScript;
	},

	set_commandScript : function(value)
	{
	    if (this._commandScript !== value)
	    {
			this._commandScript = value;
			this.raisePropertyChanged('commandScript');
		}
	},
	
	get_disableActive : function()
	{
		return this._disableActive;
	},

	set_disableActive : function(value)
	{
	    if (this._disableActive !== value)
	    {
			this._disableActive = value;
			this.raisePropertyChanged('disableActive');
		}
	},
	
	get_disablePostBack : function()
	{
		return this._disablePostBack;
	},

	set_disablePostBack : function(value)
	{
	    if (this._disablePostBack !== value)
	    {
			this._disablePostBack = value;
			this.raisePropertyChanged('disablePostBack');
		}
	},
	
	mouseoutHandler : function()
	{
		if (this._baseImage != null && this._baseImage != '')
		{
			this.setBackgroundImage(this._basePath + this._baseImage);
		}
		else
			this.clearBackgroundImage();
	},
	
	mouseoverHandler : function()
	{
		if (this._hoverImage != null && this._hoverImage != '')
		{
			this.setBackgroundImage(this._basePath + this._hoverImage);
		}
		else
			this.clearBackgroundImage();
	},
	
	mouseupHandler : function()
	{
		if (this._hoverImage != null && this._hoverImage != '')
		{
			this.setBackgroundImage(this._basePath + this._hoverImage);
		}
		else
			this.clearBackgroundImage();
	},
	
	mousedownHandler : function()
	{
		if (this._selectImage != null && this._selectImage != '')
		{
			this.setBackgroundImage(this._basePath + this._selectImage);
		}
		else
			this.clearBackgroundImage();
	},
	
	postBackHandler : function()
	{
		if(this._confirm == null || window.confirm(this._confirm))
		{
			if(this._alert != null) alert(this._alert);

			if (!this._postBackCalled)
			{
				this._postBackCalled = true;
				
				try
				{
					this.setActivityStatus(true);
					this.setTimer();
					
					var eventArgument = '';

					if (this._commandScript != null)
					{
						eventArgument = window[this._commandScript](this);
					}
					if (!this._disablePostBack)
					{
						__doPostBack(this._uniqueId, eventArgument);
					}
					else
						this.endRequest();
				}
				catch(error)
				{
					this.endRequest(error);
				}
			}
		}
	},

	endRequestHandler : function(sender, args)
	{
		this.endRequest(args.get_error());
	},

	endRequest : function(error)
	{
		if (this._postBackCalled)
		{
			try
			{
				if (this._postScript != null && error == null)
				{
					window[this._postScript](this);
				}
			}
			finally
			{
				this.clearTimer();
				this.setActivityStatus(false);
				this._postBackCalled = false;
			}
		}
	},
    
	setTimer : function()
	{
		if (this._timeout > 0)
		{
			this.clearTimer();
			this._timer = window.setTimeout(this._endRequestDelegate, this._timeout);
		}
	},

    clearTimer : function()
    {
        if (this._timer != null)
        {
            window.clearTimeout(this._timer);
            this._timer = null;
        }
    },
    
	setBackgroundImage : function(imagePath)
	{
		var replaceArgument = new RegExp('{[0]}');
		
		if (this._left != null)
		{
			this._left.style.backgroundImage =
				"url('"+imagePath.replace(replaceArgument, 'left')+"')";
		}
		if (this._middle != null)
		{
			this._middle.style.backgroundImage =
				"url('"+imagePath.replace(replaceArgument, 'middle')+"')";
		}
		if (this._right != null)
		{
			this._right.style.backgroundImage =
				"url('"+imagePath.replace(replaceArgument, 'right')+"')";
		}
	},
	
	clearBackgroundImage : function(imagePath)
	{
		if (this._left != null)
			this._left.style.backgroundImage = '';

		if (this._middle != null)
			this._middle.style.backgroundImage = '';
		
		if (this._right != null)
			this._right.style.backgroundImage = '';
	},
	
	setStatusImage : function(status)
	{
		if (this._image != null)
		{
			if (status != null && status !== '')
			{
				var replaceArgument = new RegExp('{[0]}');
				var imagePath = this._basePath + this._baseImage;
				
				this._image.style.backgroundImage =
					"url('"+imagePath.replace(replaceArgument, status)+"')";

				this._image.style.display = 'inline';
			}
			else
			{
				this._image.style.display = 'none';
			}
		}
	},
	
	setActivityStatus : function(active)
	{
		if (!this._disableActive)
		{
			this.setStatusImage(active ? 'active' : this._status);
		}
	}
}

Justice.EForms.Core.Interface.ImageButton.registerClass(
	'Justice.EForms.Core.Interface.ImageButton', Sys.UI.Control);

if (typeof(Sys) !== 'undefined')
	Sys.Application.notifyScriptLoaded();
